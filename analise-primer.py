# coding=utf-8
import os

enunciado = ('''
--------------------------------------------------------------------------------------------
                                         primerTest                                         
--------------------------------------------------------------------------------------------


   5'-TAGCGCATCAGCGATAGAGAGAATCGATCAGCTAACGCTAGCACAGCTACAGACTCAGTAGCGCACAGCATCAGCATCAG-3'
      ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
   3'-ATCGCGTAGTCGCTATCTCTCTTAGCTAGTCGATTGCGATCGTGTCGATGTCTGAGTCATCGCGTGTCGTAGTCGTAGTC-5'


   5'-TAGCGCATCAGCGATAGAGAGAATCGATCAGCTAACGCTAGCACAGCTACAGACTCAGTAGCGCACAGCATCAGCATCAG-3'
         |||||||||||||||||||
      5'-GCGTAGTCGCTATCTCTCT-3' --> primer 1

                                                primer 2 <-- 3-GTAGCGCACAGCATCAGCAT
                                                               ||||||||||||||||||||
   3'-ATCGCGTAGTCGCTATCTCTCTTAGCTAGTCGATTGCGATCGTGTCGATGTCTGAGTCATCGCGTGTCGTAGTCGTAGTC

--------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------

Crie os primer 1 (Forward) e primer 2 (Reverse) para a região em vermelho (interesse do estudo):

>arquivo|fasta|sempre|inicia|com|sinal|maior|que
ACCACAGCAGCGAGCATCAGCGATCATCATCAGCAGCGAGCGACTACGACTAGCAGCGCAGACTCGACACAGCAGCAGCG
ACATCGAGCATCGACATCGATCAGCGACATCGACGACGCGGCGCATCACACACATCACGACGACGATCAGCATCGAGCAG
CATCGACGATCAGCGACGAGCGACTACGAGCAGCGATCAGCGCATCAGCATCAGCGACAGCATCAGCATCAGCATCAGCA
GCAGCATCAGCATCAGCCTCAAATCACTCTTTGGCAACGACCCCTCGTCACAATAAAAATAGGGGGGCAAACAAAAGAAG
CTCTATTAGATACAGGAGCAGATGATACAGTATTAGAAGACATGTGTTTGCCAGGAAAATGGAAACCAAAAATGATAGGA
GGAATTGGAGGTTTTATTAAAGTGAGACAGTATGAGCAGATACCCATAGAAATCTGTGGACATAAAGCTATAGGTACAGT
ATTAGTAGGACCTACACCTGTCAACATTATTGGAAGAAATTTGTTGACTCAAATTGGTTGCACTTTAAATTTTCCCATTA
GTCCTATTGAAACTGTACCAGTAAAATTAAAGCCAGGAATGGATGGCCCAAAAGTTAAACAATGGCCATTGACAGAAGAA
AAAATAAAAGCATTAATAGAAATTTGTACAGAAATGGAAAAGGAAGGGAAAATTTCAAAAATTGGGCCTGAAAATCCATA
CAACACTCCTGTATTTGCCATAAAGAAAAAGGACAGTACTAAATGGAGAAAATTAGTAGATTTCAGAGAACTTAATAAGA
GAACTCAAGACTTCTGGGAAGTTCAATTAGGAATACCACACCCAGCAGGGTTAAAAAAGAAAAAATCAGTAACAGTACTG
GATGTGGGTGATGCATATTTTTCAGTTCCATTGGATAAAGACTTTAGAAAGTATACTGCATTTACCATACCCAGTATAAA
CAATGAGACACCAGGGATTAGGTATCAGTACAATGTGCTACCACAGGGATGGAAAGGATCACCAGCAATATTCCAAAGTA
GCATGACAAAAATTTTGGAGCCTTTTAGAAAACAAAATCCAGACATAGTTATCTATCAATATATGGATGATTTATATGTA
GGATCTGACTTAGAAATAGGGCAACATAGAACAAAAGTAGAGGAACTGAGACAACATCTGTTGAAGTGGGGGTTTACTAC
ACCAGACAAAAAACATCAGAAAGAACCTCCATTTCTTTGGATGGGTTATAGACTAGCACATCGACTACGAGCATCAGCAG
CTACGAGCACAGCATCAGCTACGACATCGACTAGCTAGCATGCGCGCACACAAAGGATCGGGCGCTACGATCATCGACAT
CACACTACGAGCGAGCATCGACGATCAGCCATGATCGATCGATCGACGATGCTAGCTAGCTAGCTGATCGATGCTAGCTA
GCTAGCTGACTGATCGATGCTAGCTAGTCGATCGATGCATGCTAGCTA

''')

#regiões referente ao enunciado
lista_regiao1 = "ACCACAGCAGCGAGCATCAGCGATCATCATCAGCAGCGAGCGACTACGACTAGCAGCGCAGACTCGACACAGCAGCAGCGACATCGAGCATCGACATCGATCAGCGACATCGACGACGCGGCGCATCACACACATCACGACGACGATCAGCATCGAGCAGCATCGACGATCAGCGACGAGCGACTACGAGCAGCGATCAGCGCATCAGCATCAGCGACAGCATCAGCATCAGCATCAGCA"
lista_regiao_iteresse = "GCAGCATCAGCATCAGCCTCAAATCACTCTTTGGCAACGACCCCTCGTCACAATAAAAATAGGGGGGCAAACAAAAGAAGCTCTATTAGATACAGGAGCAGATGATACAGTATTAGAAGACATGTGTTTGCCAGGAAAATGGAAACCAAAAATGATAGGAGGAATTGGAGGTTTTATTAAAGTGAGACAGTATGAGCAGATACCCATAGAAATCTGTGGACATAAAGCTATAGGTACAGTATTAGTAGGACCTACACCTGTCAACATTATTGGAAGAAATTTGTTGACTCAAATTGGTTGCACTTTAAATTTTCCCATTAGTCCTATTGAAACTGTACCAGTAAAATTAAAGCCAGGAATGGATGGCCCAAAAGTTAAACAATGGCCATTGACAGAAGAAAAAATAAAAGCATTAATAGAAATTTGTACAGAAATGGAAAAGGAAGGGAAAATTTCAAAAATTGGGCCTGAAAATCCATACAACACTCCTGTATTTGCCATAAAGAAAAAGGACAGTACTAAATGGAGAAAATTAGTAGATTTCAGAGAACTTAATAAGAGAACTCAAGACTTCTGGGAAGTTCAATTAGGAATACCACACCCAGCAGGGTTAAAAAAGAAAAAATCAGTAACAGTACTGGATGTGGGTGATGCATATTTTTCAGTTCCATTGGATAAAGACTTTAGAAAGTATACTGCATTTACCATACCCAGTATAAACAATGAGACACCAGGGATTAGGTATCAGTACAATGTGCTACCACAGGGATGGAAAGGATCACCAGCAATATTCCAAAGTAGCATGACAAAAATTTTGGAGCCTTTTAGAAAACAAAATCCAGACATAGTTATCTATCAATATATGGATGATTTATATGTA"
lista_regiao2 = "GGATCTGACTTAGAAATAGGGCAACATAGAACAAAAGTAGAGGAACTGAGACAACATCTGTTGAAGTGGGGGTTTACTACACCAGACAAAAAACATCAGAAAGAACCTCCATTTCTTTGGATGGGTTATAGACTAGCACATCGACTACGAGCATCAGCAGCTACGAGCACAGCATCAGCTACGACATCGACTAGCTAGCATGCGCGCACACAAAGGATCGGGCGCTACGATCATCGACATCACACTACGAGCGAGCATCGACGATCAGCCATGATCGATCGATCGACGATGCTAGCTAGCTAGCTGATCGATGCTAGCTAGCTAGCTGACTGATCGATGCTAGCTAGTCGATCGATGCATGCTAGCTA"

print("O comprimento ideal deve ser entre 17 e 28 pares de bases pb")
primer1 = input("Insira seu desenho do primer 1 (forward): ").upper()
quantidade = len(primer1)
if quantidade < 17 or quantidade > 28:
    print("Por favor repita o procedimento, o comprimento deve ser maior que 17 e menor que 28")
#invertedo o primer


#Encontrando o primer1 na lista_regiao1
achar_primer1 = lista_regiao1.find(primer1)
if achar_primer1 >= 0:
    print("Primer encontrado na região um...")

primer2 = input("Insira seu desenho do primer 2 (reverse): ").upper()

